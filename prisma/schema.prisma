generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

// ===== MODELOS DE NEXTAUTH =====

model Account {  
  userId            String
  type              String
  provider          String
  providerAccountId String  
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  refreshTokens RefreshToken[]
  cartItems CartItem[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  revoked   Boolean  @default(false)

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// ===== ENUMS =====

enum Role {
  USER
  ADMIN
}

// ===== MODELOS DE LA APLICACIÃ“N =====

model Product {
	id          Int      @id @default(autoincrement())
	title       String
	price       Decimal
	description String
	category    Category
	image       String
	rating      Json
	createdAt   DateTime @default(now())
	updatedAt   DateTime @updatedAt
	cartItems   CartItem[]
}

model CartItem {
	id        String   @id @default(uuid())
	userId    String
	productId Int
	quantity  Int

	user      User       @relation(fields: [userId], references: [id])
	product Product @relation(fields: [productId], references: [id])

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	@@unique([ productId ])
}

enum Category {
	electronics
	jewelery
	men_s_clothing @map("men's clothing")
	women_s_clothing @map("women's clothing")
}


